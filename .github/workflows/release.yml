name: Build & Release Electron App

on:
  push:
    tags:
      - 'v*'

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18

      - name: Install dependencies
        run: npm install

      - name: Build app
        run: npm run build

      - name: Package Electron app
        run: |
          if [ "${{ matrix.os }}" = "windows-latest" ]; then
            npx electron-builder --win --x64 --publish never
          else
            npx electron-builder --linux --x64 --publish never
          fi
        shell: bash

      - name: Upload release artifacts
        uses: actions/upload-artifact@v4
        with:
          name: electron-app-${{ matrix.os }}
          path: |
            release/*.exe
            release/*.AppImage
            release/*.deb
            release/*.zip
            release/*.tar.gz

  release:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          path: dist-artifacts

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          files: dist-artifacts/**/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 